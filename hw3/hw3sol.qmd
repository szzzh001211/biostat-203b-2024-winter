---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 23 @ 11:59PM"
author: "Ziheng Zhang_606300061"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
execute:
  eval: false    
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup, eval=TRUE}
library(arrow)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
library(gridExtra)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://mimic.mit.edu/docs/iv/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2024winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10013310 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

```{bash}
#| eval: false
ln -s /Users/zihengzhang/Downloads/203B/203b-hw/hw2/labevents_parquet \
./labevents_pq
```

```{r,eval=TRUE}
patient_id <- 10013310 # set patient ID

# find race for that patient
race_info <- read_csv("~/mimic/hosp/admissions.csv.gz") |>
  filter(subject_id == patient_id) |>
  select(subject_id, race)

# find other personal info for that patient
personal_info <- read_csv("~/mimic/hosp/patients.csv.gz") |>
  filter(subject_id == patient_id) |>
  select(subject_id, gender, anchor_age) |>
  rename(age = anchor_age) |>
  left_join(race_info, by = "subject_id") |>
  distinct()

# find top 3 diagnoses for that patient in each stay ID
diagonose_code_info <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")
diagnose_info <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz") |>
  filter(subject_id == patient_id) |>
  select(-icd_version) |>
  filter(seq_num <= 3) |>
  left_join(diagonose_code_info, by = "icd_code") |>
  select(-icd_version)

# find ADT info for that patient
ADT_info <- read_csv("~/mimic/hosp/transfers.csv.gz") |>
  filter(subject_id == patient_id) |>
  select(subject_id, hadm_id, intime, outtime, eventtype, careunit) |>
  filter(eventtype != "discharge") |>
  arrange(intime) |>
  distinct()

# find lab info for that patient
lab_info <- open_dataset("./labevents_pq", format = "parquet") |>
  filter(subject_id == patient_id) |>
  select(subject_id, hadm_id, charttime) |>
  collect() |>
  distinct()
  
# find procedure info for that patient
procedure_code_info <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
procedure_info <- read_csv("~/mimic/hosp/procedures_icd.csv.gz") |>
  filter(subject_id == patient_id) |>
  select(subject_id, hadm_id, chartdate, icd_code) |>
  mutate(chartdate = as.POSIXct(chartdate, format = "%Y-%m-%d %H:%M:%S")) |>
  left_join(procedure_code_info, by = "icd_code") |>
  select(-icd_version) |>
  arrange(chartdate) |>
  
  # split long title and only keep the first part
  mutate(short_title = str_split(long_title, ",") %>% sapply(function(x) 
    x[1])) |> 
  distinct()
```

```{r,eval=TRUE}
# combine personal info into required format
title_text <- sprintf("Patient %d, %s, %d years old, %s", 
                      personal_info$subject_id, personal_info$gender, 
                      personal_info$age, tolower(personal_info$race))

top3_text <- diagnose_info |>
  slice(1:3) |>
  select(long_title) |>
  mutate(first_five_words = str_split(long_title, "\\s+") %>% 
    sapply(function(x) {
      if (length(x) < 5) {
        paste(x, collapse = " ") # in case some diagnosis has less than 5 words
        } else {
          paste(x[1:5], collapse = " ")
          }
      })) |> 
  pull(first_five_words)

subtitle_text <- sprintf("%s\n%s\n%s", top3_text[1], top3_text[2], top3_text[3])

# create the plot and y-axis
empty_plot <- ggplot() + 
  geom_blank() +
  scale_y_discrete(limits = c("Procedure", "Lab", "ADT")) +
  labs(x = "Calendar Time", title = title_text, 
       subtitle = tolower(subtitle_text)) +
  theme_bw()

ADT_plot <- empty_plot + 
  geom_segment(data = ADT_info, aes(x = intime, xend = outtime, y = "ADT", 
                                    yend = "ADT", color = careunit), 
               linewidth = ifelse(str_detect(ADT_info$careunit, "CCU") | 
                                    str_detect(ADT_info$careunit, "ICU"), 
                                  8, 3)) +
  labs(color = "Care Unit") +
  theme(legend.position = "bottom", legend.box = "vertical", 
        text = element_text(size = 8))

Lab_plot <- ADT_plot + 
  geom_point(data = lab_info, aes(x = charttime, y = "Lab"), 
             size = 5, shape = "+")

Procedure_plot <- Lab_plot + 
  geom_point(data = procedure_info, aes(x = chartdate, y = "Procedure", 
                                        shape = short_title), size = 5) +
  
  # set manually the shape of the procedure to be the total 9 procedures
  scale_shape_manual(values = 
                       seq(1, length(unique(procedure_info$short_title)))) +
  labs(shape = "Procedure", y = "") +
  guides(shape = guide_legend(nrow = 5)) +
  theme(legend.position = "bottom", legend.box = "vertical", 
        text = element_text(size = 8))

plot(Procedure_plot)
```
**Answer:** This patient has been admitted to the hospital three times. Each admission results in the top 3 diagnoses. Therefore, for the subtitle, we select one of the admission records and displayed the top 3 diagnoses for that admission. Here we select admission record with the first `hadm_id`, `hadm_id` = 21243435, and we only display the first few words of the long title because the long title is too long.\ 
For the label of procedure, since the long title is too long, we only display the words before the first comma of the long title. The default setting of the number of labels is 6 and here we manually set the shape of the procedure to be the total 9 procedures and then all of the procedures are displayed in the plot.

### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID. 

![](10001217_icu.png)

Do a similar visualization for the patient `10013310`.
```{bash}
#| eval: false
ln -s /Users/zihengzhang/Downloads/203B/203b-hw/hw2/chartevents.parquet \
./chartevents_pq
```

```{r,eval=TRUE}
patient_id <- 10013310

item_icu_info <- read_csv("~/mimic/icu/d_items.csv.gz") |>
  filter(itemid %in% c(220045, 220180, 220179, 220210, 223761)) |>
  select(itemid, abbreviation) |>
  distinct()

chartevents_info <- open_dataset("./chartevents_pq", format = "parquet") |>
  filter(subject_id == patient_id) |>
  filter(itemid %in% c(220045, 220180, 220179, 220210, 223761)) |>
  select(subject_id, stay_id, itemid, charttime, valuenum) |>
  collect() |>
  left_join(item_icu_info, by = "itemid") |>
  mutate(charttime = with_tz(charttime, "UTC"))


title_text <- sprintf("Patient %d ICU stays - Vitals", 
                      chartevents_info$subject_id)

icu_plot <- ggplot(chartevents_info, aes(x = charttime, y = valuenum, 
                                         color = abbreviation)) +
  geom_point(size = 1) +
  geom_line() +
  labs(title = title_text,
       x = "",
       y = "") +
  facet_grid(rows = vars(abbreviation), cols = vars(stay_id), scales = "free") +
  theme_light() +
  theme(legend.position = "none") +
  scale_x_datetime(date_labels = "%b %d %H:%M") +
  guides(x = guide_axis(n.dodge = 2)) # to avoid overlapping of x-axis labels

plot(icu_plot)


```

## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 
```{r,eval=TRUE}
icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz")
print(icustays_tble, width = Inf)
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs. 
```{r,eval=TRUE}
# calculate the number of unique subject_id
icustays_tble |> distinct(subject_id) |> count()
icustays_tble |> count(subject_id) 
```

```{r,eval=TRUE}
icustays_tble |> count(subject_id) |> 
  ggplot() + 
  geom_bar(mapping = aes(x = n)) + 
  labs(title = "Number of ICU stays per subject_id") + 
  xlab("ICU Stays") + 
  ylab("Number of subject_id") + 
  theme_bw()
```
**Answer:** There are 50920 unique `subject_id`. A `subject_id` can have multiple ICU stays.The number of ICU stays per `subject_id` is shown in the graph above. Most `subject_id` have 1 ICU stay, and most of `subject_id` have the ICU stay less than 10 times. The distribution of the number of ICU stays per `subject_id` is right-skewed and the number of `subject_id` decreases as the number of ICU stays increases. There are also some patients who stay in the ICU for many times, but the number of these patients is very small.


## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.
```{r,eval=TRUE}
admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz")
print(admissions_tble, width = Inf)
```
### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patient’s age at their first admission has been fixed to 300. 

```{r,eval=TRUE}
admissions_tble |> distinct(subject_id) |> count()
admissions_tble |> count(subject_id)
```
**Answer:** There are 180733 unique `subject_id`. A `subject_id` can have multiple admissions.

```{r,eval=TRUE}
admissions_tble |> count(subject_id) |> 
  ggplot() + 
  geom_histogram(mapping = aes(x = n), binwidth = 3, fill = "salmon", 
                 color = "black") + 
  labs(title = "Admissions vs Subject ID") + 
  xlab("Number of Admissions") + 
  ylab("Count") + 
  theme_bw()
```
**Answer:** The number of admissions per `subject_id` is shown in the graph above. Many `subject_id` have less than 3 admission times, and most of `subject_id` have the admission less than 30 times. The number of admissions per `subject_id` is right-skewed and the number of `subject_id` decreases as the number of admissions increases. There are also some patients who are admitted for many times, but the number of these patients is very small.

```{r,eval=TRUE}
# extract the hour from admittime
admissions_hour <- hour(admissions_tble$admittime) |> as_tibble()
ggplot(data = admissions_hour) + 
  geom_bar(mapping = aes(x = value)) + 
  labs(title = "Distribution of Admission Hour") +
  xlab("Hour") + 
  ylab("Count") + 
  theme_bw()
```
**Answer:** The admission hour is shown in the graph above. It seems there is something unusual. The number of admissions is highest at midnight, gradually decreasing over time. This may be because there is often some emergency situation at midnight. The time interval 1AM-10AM has fewer admissions, except for a sudden increase at 7AM. This may be because many patients will choose to get up the next day and go to the hospital in the early morning. Then, as time progresses, the number of admissions gradually increases. The evening and night are the peak admission times within a day, with the overall situation being relatively uniform. 

```{r,eval=TRUE}
# extract the minute from admittime
admissions_minute <- minute(admissions_tble$admittime) |> as_tibble()
ggplot(data = admissions_minute) + 
  geom_bar(mapping = aes(x = value)) + 
  labs(title = "Distribution of Admission Minute") + 
  xlab("Minute") + 
  ylab("Count") + 
  theme_bw()
```
**Answer:** The admission minute is shown in the graph above. There are very clear unusual patterns. There are significant peaks in admissions at the top of the hour, 15 minutes past, 30 minutes past, and 45 minutes past the hour. This may be because the hospital's admission system or the staff usually input admission data on the hour, 15 minutes past, 30 minutes past, and 45 minutes past the hour. At other times, the number of admissions is relatively uniformly distributed.

```{r,eval=TRUE}
# calculate the length of hospital stay
admissions_length <- difftime(admissions_tble$dischtime, 
                            admissions_tble$admittime, units = "days") |> 
  as_tibble()
ggplot(admissions_length, aes(x = value)) + 
  geom_histogram(binwidth = 5, fill = "salmon", color = "black") + 
  labs(title = "Distribution of Length of Stay") + 
  xlab("Length") + 
  ylab("Count") + 
  theme_bw()
```
**Answer:** The length of hospital stay is shown in the graph above. The length of hospital stay is right-skewed. Most of the patients stay in the hospital for less than 10 days, and the number of patients decreases as the length of hospital stay increases. There are also some patients who stay in the hospital for a long time, but the number of these patients is very small.

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.
```{r,eval=TRUE}
patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz")
print(patients_tble, width = Inf)
```

### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.
```{r,eval=TRUE}
ggplot(patients_tble, aes(x = gender, fill = gender)) +
  geom_bar() +
  # show the count on top of the bar
  geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5, 
            color = "black", size = 3) +
  labs(title = "Distribution of Gender",
       x = "Gender",
       y = "Count") + 
  theme_bw()
```

```{r,eval=TRUE}
ggplot(patients_tble, aes(x = anchor_age)) +
  geom_histogram(binwidth = 5, color = "black", alpha = 0.7) +
  labs(title = "Distribution of Anchor_Age",
       x = "Anchor_Age",
       y = "Count") + 
  theme_bw()
```

```{r,eval=TRUE}
ggplot(patients_tble, aes(x = gender, y = anchor_age, fill = gender)) +
  geom_violin() +
  labs(title = "Anchor Age Distribution by Gender",
       x = "Gender",
       y = "Anchor Age")
```
**Answer:** The number of female patients is slightly higher than the number of male patients. 158,553 vs 141,159. The distribution of `anchor_age` is shown in the graph above. The number of patients is highest in the youngest age group, around 20 years old, and the number of patients firstly decreases and then increases as the age increases. There is another peak in the age group 55. And then the number of patients gradually decreases as the age increases. Next, we compare `anchor_age` in different gender groups. The distribution of `anchor_age` in different gender groups are almost the same. The largest number of age groups for both gender groups are around 20 years old and then the number of people decreases when they are 40 years old. There is a slight increase in numbers around 60. Finally, as age increases, the number of people decreases for both gender groups. In the age group 90, there is another small increase, with females exhibiting a larger increase than males.

## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
#| eval: true
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

```{r,eval=TRUE}
d_item_subset <- read_csv("~/mimic/hosp/d_labitems.csv.gz") |> 
  select(itemid, label) # we only need itemid and its label name

icustays_tble_subset <- select(icustays_tble, subject_id, stay_id, intime)

labevents_tble <- open_dataset("./labevents_pq", format = "parquet") |> 
  filter(itemid %in% c(50912, 50971, 50983, 50902, 
                       50882, 51221, 51301, 50931)) |> 
  select(subject_id, itemid, valuenum, storetime) |>
  arrange(subject_id, itemid) |>
  collect() |>
  
  # filter subject_id in labevents to match with icustays_tble
  semi_join(icustays_tble_subset, by = c("subject_id")) |>
  
  # combine label names
  left_join(d_item_subset, by = c("itemid")) |>
  
  # combine intime and stay_id by subject_id
  left_join(icustays_tble_subset, by = c("subject_id")) |>
  
  # filter the measurement before the ICU stay
  filter(storetime < intime) |>
  group_by(subject_id, label, stay_id) |>
  
  # sort by storetime and get the last available measurement
  arrange(storetime, .by_group = TRUE) |>
  summarise(finalvalue = last(valuenum)) |>
  mutate(label = tolower(label)) |>
  ungroup() |>
  
  # transform the table to wide format
  pivot_wider(names_from = label, values_from = finalvalue) |>
  rename("wbc" = "white blood cells")

print(labevents_tble, width = Inf)
```

## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patient’s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.
**Answer:** This procedure has been done in Q1.2.

```{r,eval=TRUE}
item_icu_subset <- read_csv("~/mimic/icu/d_items.csv.gz") |>
  select(itemid, label) |>
  
  # change the label format into required format
  mutate(label = str_replace_all(label, " ", "_")) |>
  mutate(label = tolower(label))

icustays_tble_subset <- select(icustays_tble, subject_id, stay_id, intime, 
                               outtime)

chartevents_tble <- arrow::open_dataset("./chartevents_pq", 
                                         format = "parquet") |> 
  filter(itemid %in% c(220045, 220180, 220179, 220210, 223761)) |> 
  select(subject_id, itemid, valuenum, charttime) |>
  arrange(subject_id, itemid) |>
  collect() |>
  semi_join(icustays_tble_subset, by = c("subject_id")) |>
  left_join(item_icu_subset, by = c("itemid")) |>
  left_join(icustays_tble_subset, by = c("subject_id")) |>
  filter(charttime >= intime & charttime <= outtime) |>
  group_by(subject_id, label, stay_id) |>
  
  # sort by charttime and get the first available measurement
  arrange(charttime, .by_group = TRUE) |>
  summarise(firstvalue = first(valuenum)) |>
  ungroup() |>
  pivot_wider(names_from = label, values_from = firstvalue)


# change the fourth and fifth column order to match the screenshot 
temp <- chartevents_tble[, 4]
chartevents_tble[, 4] <- chartevents_tble[, 5]
chartevents_tble[, 5] <- temp
temp_colname <- colnames(chartevents_tble)[4]
colnames(chartevents_tble)[4] <- colnames(chartevents_tble)[5]
colnames(chartevents_tble)[5] <- temp_colname

print(chartevents_tble, width = Inf)
```

## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)
**Answer:** `anchor_age` is age at the `anchor_year` so we use `year(intime) - anchor_year` to calculate the age difference between the year of `intime` and `anchor_year` and then add it to `anchor_age` to get the age at `intime`.
```{r,eval=TRUE}
mimic_icu_cohort <- icustays_tble |>
  left_join(admissions_tble, by = c("subject_id", "hadm_id")) |>
  left_join(patients_tble, by = c("subject_id")) |>
  left_join(labevents_tble, by = c("subject_id", "stay_id")) |>
  left_join(chartevents_tble, by = c("subject_id", "stay_id")) |>
  mutate(age_at_intime = anchor_age + year(intime) - anchor_year) |>
  filter(age_at_intime >= 18)
print(mimic_icu_cohort, width = Inf)
```

## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the average vital measurements within the first hour of ICU stay

- Length of ICU stay `los` vs first ICU unit

```{r,eval=TRUE}
summary_by_race <- mimic_icu_cohort |>
  group_by(race) |>
  summarise(
    mean_los = mean(los),
    sd_los = sd(los),
    median_los = median(los),
    min_los = min(los),
    max_los = max(los)
  )
print(summary_by_race, width = Inf)

ggplot(summary_by_race, aes(x = race, y = mean_los)) +
  geom_bar(stat = "identity", fill = "salmon", width = 0.5) +
  labs(title = "Mean ICU Length of Stay by Race", x = "Race", 
       y = "Mean Length of Stay") +
  coord_flip() +
  theme_bw()
``` 
**Comment:** The mean lengths of ICU stay for all `race` groups are more than 2 days. The `AMERICAN INDIAN/ALASKA NATIVE` group has the highest mean length of stay, which is around 4.5 days, while the `HISPANIC/LATINO - MEXICAN` group has the lowest mean length of stay, which is more than 2.5 days.

```{r,eval=TRUE}
ggplot(mimic_icu_cohort, aes(los, fill = insurance)) + 
  geom_histogram(color = "black", binwidth = 5) +
  facet_wrap(~insurance) +
  labs(title = "Length of ICU Stay vs Insurance", x = "Length of Stay") +
  theme_bw()
```
**Comment:** Overall, the length of ICU stay in all `insurance` types tends to be relatively short and the distributions are all right-skewed. As the length of stay increases, the frequency decreases dramatically. The number of people using `other` insurances is the largest and that for `Medicare` insurance is almost the same, just a little bit smaller in the shortest `los` group. The number of people using `Medicaid` insurance is the smallest in all lengths of stay, accounting for only about one-tenth of the total of the other two types combined.


```{r,eval=TRUE}
ggplot(mimic_icu_cohort, aes(los, fill = marital_status)) + 
  geom_histogram(color = "black", binwidth = 5) +
  facet_wrap(~marital_status) +
  labs(title = "Length of ICU Stay vs Martial Status", x = "Length of Stay") +
  theme_bw()
```
**Comment:** Overall, the length of ICU stay in all marital statuses tends to be relatively short and the distributions are all right-skewed. As the length of stay increases, the frequency decreases dramatically. The number of people who are `married` marital status remains the largest in almost all lengths of stay. In contrast, the number of people who are `divorced` and `widowed` marital status is small.

```{r,eval=TRUE}
ggplot(mimic_icu_cohort, aes(los, fill = gender)) +
  geom_histogram(color = "black", binwidth = 5) +
  facet_wrap(~gender) +
  labs(title = "Length of ICU Stay vs Gender", x = "Length of Stay") +
  theme_bw()
```
**Comment:** Overall, the length of ICU stay in all `gender` types tends to be relatively short and the distributions are all right-skewed. As the length of stay increases, the frequency decreases dramatically. The number of `female` is less than that for `male` remains in all length of stay groups.

```{r,eval=TRUE}
ggplot(mimic_icu_cohort, aes(x = age_at_intime, y = los)) +
  geom_point(alpha = 0.3) +
  labs(title = "Length of ICU Stay vs Age at Intime", x = "Age at Intime", 
       y = "Length of Stay") +
  theme_bw()
```
**Comment:** The length of ICU stay tends to be relatively short for all ages. As the age increases, the length of stay tends to increase and then decreases. The length of stay seems to be longer for people aged 65-80.

```{r,eval=TRUE}
f1 <- ggplot(mimic_icu_cohort, aes(x = bicarbonate, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f2 <- ggplot(mimic_icu_cohort, aes(x = chloride, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f3 <- ggplot(mimic_icu_cohort, aes(x = creatinine, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f4 <- ggplot(mimic_icu_cohort, aes(x = glucose, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f5 <- ggplot(mimic_icu_cohort, aes(x = hematocrit, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f6 <- ggplot(mimic_icu_cohort, aes(x = potassium, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f7 <- ggplot(mimic_icu_cohort, aes(x = sodium, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f8 <- ggplot(mimic_icu_cohort, aes(x = wbc, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

f <- grid.arrange(f1, f2, f3, f4, f5, f6, f7, f8, ncol = 2, nrow = 4, 
                  top = paste("Length of ICU Stay vs", 
                              "Last Available Lab Measurements before ICU Stay",
                              collapse = " "))
```
**Comment:** Data points of `creatinine`, `glucose`, and `wbc` figures are relatively concentrated in regions where measurement values are small, and as these three values increase, length of stay tends to decrease. The data points of the other five figures show almost in the middle range of measurement values, and as these values increase, length of stay tends to increase and then decrease.

```{r,eval=TRUE}
g1 <- ggplot(mimic_icu_cohort, aes(x = heart_rate, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

g2 <- ggplot(mimic_icu_cohort, aes(x = non_invasive_blood_pressure_systolic, 
                                   y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

g3 <- ggplot(mimic_icu_cohort, aes(x = non_invasive_blood_pressure_diastolic, 
                                   y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

g4 <- ggplot(mimic_icu_cohort, aes(x = respiratory_rate, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")

g5 <- ggplot(mimic_icu_cohort, aes(x = temperature_fahrenheit, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  labs(y = "LOS")


g <- grid.arrange(g1, g2, g3, g4, g5, ncol = 2, 
                  top = paste("Length of ICU Stay vs", 
                              "First Vital Measurements within the ICU Stay", 
                              collapse = " "))
```
**Comment:** All of five vital measurements have some outliers and they cause influence on normal data analysis.

```{r,eval=TRUE}
h1 <- ggplot(mimic_icu_cohort, aes(x = heart_rate, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  xlim(0, 250) +
  labs(y = "LOS")

h2 <- ggplot(mimic_icu_cohort, aes(x = non_invasive_blood_pressure_systolic, 
                                   y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  xlim(0, 300) +
  labs(y = "LOS")

h3 <- ggplot(mimic_icu_cohort, aes(x = non_invasive_blood_pressure_diastolic, 
                                   y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  xlim(0, 220) +
  labs(y = "LOS")

h4 <- ggplot(mimic_icu_cohort, aes(x = respiratory_rate, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  xlim(0, 100) +
  labs(y = "LOS")

h5 <- ggplot(mimic_icu_cohort, aes(x = temperature_fahrenheit, y = los)) +
  geom_point(size = 0.5, alpha = 0.3) +
  xlim(0, 110) +
  labs(y = "LOS")


h <- grid.arrange(h1, h2, h3, h4, h5, ncol = 2, 
                  top = paste("Length of ICU Stay vs", 
                              "First Vital Measurements within the ICU Stay", 
                              collapse = " "))
```
**Comment:** After limiting the range of x-axis, the figures of `heart_rate`, `non_invasive_blood_pressure_systolic`, `non_invasive_blood_pressure_diastolic`, and `respiratory_rate` have similar patterns. `temperature_fahrenheit` around 35 tends to have slightly short lengths of stay. Most values fall within the range of 90 to 105 Fahrenheit. Within this range, as `temperature_fahrenheit` increases, the length of stay tends to increase and then decrease. The longest lengths of stay occur around a temperature of approximately 98 Fahrenheit, which is the normal body temperature.

```{r,eval=TRUE}
summary_by_care <- mimic_icu_cohort %>%
  group_by(first_careunit) %>%
  summarise(
    mean_los = mean(los),
    sd_los = sd(los),
    median_los = median(los),
    min_los = min(los),
    max_los = max(los)
  )
print(summary_by_care, width = Inf)

ggplot(summary_by_care, aes(x = first_careunit, y = mean_los)) +
  geom_bar(stat = "identity", fill = "salmon", width = 0.5) +
  labs(title = "Mean ICU Length of Stay by First ICU Unit", 
       x = "First Careunit", y = "Mean Length of Stay") +
  coord_flip() +
  theme_bw()
```
**Comment:** The mean lengths of ICU stay for all `first_icu` groups are more than 2 days. The `Neuro Surgical Intensive Care Unit (Neuro SICU)` group has the highest mean length of stay, which is more than 6 days, while the `Neuro Stepdown` group has the lowest mean length of stay, which is around 2.5 days. The remaining seven categories are relatively similar.


