---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 23 @ 11:59PM"
author: "Your Name and UID"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
execute:
  eval: false    
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup, eval=TRUE}
library(arrow)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://mimic.mit.edu/docs/iv/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2024winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10013310 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

```{bash}
#| eval: false
ln -s /Users/zihengzhang/Downloads/203B/203b-hw/hw2/labevents_parquet \
/Users/zihengzhang/Downloads/203B/203b-hw/hw3/labevents_pq
```

```{r,eval=TRUE}
labevents_data <- arrow::open_dataset("./labevents_pq", 
                                         format = "parquet")
```

```{r,eval=TRUE}
patients_data <- read_csv("~/mimic/hosp/patients.csv.gz")
admissions_data <- read_csv("~/mimic/hosp/admissions.csv.gz")
transfers_data <- read_csv("~/mimic/hosp/transfers.csv.gz")
procedures_icd_data <- read_csv("~/mimic/hosp/procedures_icd.csv.gz")
diagnoses_icd_data <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz")
d_icd_procedures_data <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
d_icd_diagnoses_data <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")
```

```{r,eval=TRUE}
admission_filtered <- admissions_data |>
  filter(subject_id == 10013310)

patients_filtered <- patients_data |>
  filter(subject_id == 10013310)

transfers_filtered <- transfers_data |>
  filter(subject_id == 10013310)

procedures_icd_filtered <- procedures_icd_data |>
  filter(subject_id == 10013310)

diagnoses_icd_filtered <- diagnoses_icd_data |>
  filter(subject_id == 10013310)

#d_icd_procedures_filtered <- d_icd_procedures_data |>
  #filter(subject_id == 10013310)

#d_icd_diagnoses_filtered <- d_icd_diagnoses_data |>
  #filter(subject_id == 10013310)

labevents_filtered <- labevents_data |>
  filter(subject_id == 10013310) |> collect()
```

### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

Do a similar visualization for the patient `10013310`.

## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 
```{r,eval=TRUE}
icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz")
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs. 
```{r,eval=TRUE}
icustays_tble |> distinct(subject_id) |> count()
icustays_tble |> count(subject_id) 
```
**Answer:** There are 50920 unique `subject_id`. A `subject_id` can have multiple ICU stays.

```{r,eval=TRUE}
icustays_tble |> count(subject_id) |> ggplot(aes(n)) + geom_bar() + 
  labs(title = "Number of ICU stays per subject_id") + xlab("ICU Stays") + 
  ylab("Number of subject_id") + theme_bw()
```
**Answer:** The number of ICU stays per `subject_id` is shown in the graph above. Most `subject_id` have 1 ICU stay, and the number of `subject_id` decreases as the number of ICU stays increases.


## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.
```{r,eval=TRUE}
admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz")
```
### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patientâ€™s age at their first admission has been fixed to 300. 

```{r,eval=TRUE}
admissions_tble |> distinct(subject_id) |> count()
admissions_tble |> count(subject_id)
```
**Answer:** There are 180733 unique `subject_id`. A `subject_id` can have multiple admissions.

```{r,eval=TRUE}
admissions_tble |> count(subject_id) |> ggplot(aes(n)) + geom_bar() + 
  labs(title = "Number of admissions per subject_id") + xlab("Admissions") + 
  ylab("Number of subject_id") + theme_bw()
```
**Answer:** The number of admissions per `subject_id` is shown in the graph above. Most `subject_id` have 1 admission, and the number of `subject_id` decreases as the number of admissions increases.

```{r,eval=TRUE}
admissions_hour <- hour(admissions_tble$admittime) |> as_tibble()
ggplot(data = admissions_hour, aes(value)) + geom_bar() + 
  labs(title = "Admission Hour") + xlab("Hour") + ylab("Count") + theme_bw()
```
**Answer:** The admission hour is shown in the graph above. It seems there is something unusual. The number of admissions is highest at midnight, gradually decreasing over time. However, there is a sudden increase in admissions at 7AM. Then, as time progresses, the number of admissions gradually increases. The evening and night are the peak admission times within a day, with the overall situation being relatively balanced. 

```{r,eval=TRUE}
admissions_minute <- minute(admissions_tble$admittime) |> as_tibble()
ggplot(data = admissions_minute, aes(value)) + geom_bar() + 
  labs(title = "Admission Minute") + xlab("Minute") + ylab("Count") + theme_bw()
```
**Answer:** The admission minute is shown in the graph above. There are very clear unusual patterns. There are significant peaks in admissions at the top of the hour, 15 minutes past, 30 minutes past, and 45 minutes past the hour. At other times, the number of admissions is relatively evenly distributed.

```{r,eval=TRUE}
admissions_length <- interval(admissions_tble$dischtime, 
                            admissions_tble$admittime) |> hour() |> as_tibble()
admissions_length |> ggplot(aes(value)) + geom_bar() + 
  labs(title = "Length of Admission ") + xlab("Length") + ylab("Count") + theme_bw()
```
**Answer:** The length of hospital stay is shown in the graph above. It appears there is some unusual pattern. The most common length of hospital stay is around 3 hours. As the length of hospital stay increases, the frequency gradually decreases. The least common length is around 14 hours. However, as the length of hospital stay continues to increase, the frequency begins to gradually rise again. The longest length is around 24 hours.

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.
```{r,eval=TRUE}
patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz")
```

### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.
```{r,eval=TRUE}
ggplot(patients_tble, aes(x = gender, fill = gender)) +
  geom_bar() +
  geom_text(stat='count', aes(label=after_stat(count)), 
            vjust=-0.5, color='black', size=3) +
  labs(title = "Distribution of Gender",
       x = "Gender",
       y = "Count")
```
**Answer:** The number of female patients is slightly higher than the number of male patients. 158,553 vs 141,159.

```{r,eval=TRUE}
ggplot(patients_tble, aes(x = anchor_age)) +
  geom_histogram(binwidth = 5, fill = "red", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Anchor_Age",
       x = "Anchor_Age",
       y = "Count")
```
**Answer:** The distribution of `anchor_age` is shown in the graph above. The number of patients is highest in the youngest age group, around 20 years old, and the number of patients firstly decreases and then increases as the age increases. There is another peak in the age group 55. And then the number of patients gradually decreases as the age increases.

## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
#| eval: true
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
#| eval: true
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

```{r,eval=FALSE}
filtered_labevents_parquet <- arrow::open_dataset("./labevents_pq", 
                                         format = "parquet") |> 
  dplyr::filter(itemid %in% c(50912, 50971, 50983, 50902, 
                              50882, 51221, 51301, 50931)) |> 
  dplyr::filter(subject_id %in% unique(icustays_tble$subject_id)) |>
  dplyr::filter(hadm_id %in% unique(icustays_tble$hadm_id)) |>
  dplyr::collect()
  
```

```{r,eval=TRUE}
d_labitems <- read_csv("~/mimic/hosp/d_labitems.csv.gz")
d_item_subset <- d_labitems %>%
  select(itemid, label)
icustays_tble_subset <- select(icustays_tble, subject_id, stay_id, intime)

labevents_tble <- arrow::open_dataset("./labevents_pq", 
                                         format = "parquet") |> 
  dplyr::filter(itemid %in% c(50912, 50971, 50983, 50902, 
                              50882, 51221, 51301, 50931)) |> 
  dplyr::select(subject_id, itemid, valuenum, storetime) |>
  arrange(subject_id, itemid) |>
  dplyr::collect() |>
  semi_join(icustays_tble, by = c("subject_id")) |>
  left_join(d_item_subset, by = c("itemid")) |>
  left_join(icustays_tble_subset, by = c("subject_id")) |>
  filter(storetime < intime) |>
  group_by(subject_id, label, stay_id) |>
  summarise(finalvalue = last(valuenum)) |>
  spread(label, finalvalue)

labevents_tble
```
## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patientâ€™s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.

## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)

## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the average vital measurements within the first hour of ICU stay

- Length of ICU stay `los` vs first ICU unit

